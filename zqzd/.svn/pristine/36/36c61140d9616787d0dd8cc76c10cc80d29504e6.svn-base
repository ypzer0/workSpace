$(function () {
    $("#jqGrid").Grid({
        url: '../attributecategoryext/list',
        colModel: [
			{label: 'id', name: 'id', index: 'id', key: true, hidden: true},
			{label: '名称', name: 'name', index: 'name', width: 80, sortable: false, align: 'center'},
			{label: '市场价', name: 'marketPrice', index: 'market_price', width: 80, sortable: false, align: 'center'},
			{label: '销售价格', name: 'salePrice', index: 'sale_price', width: 80, sortable: false, align: 'center'},
			{label: '收购价格', name: 'buyPrice', index: 'buy_price', width: 80, sortable: false, align: 'center'},
			{label: '推广价格', name: 'proPrice', index: 'pro_price', width: 80, sortable: false, align: 'center'},
			{label: '库存', name: 'maxCount', index: 'max_count', width: 80, sortable: false, align: 'center'},
			{
	            title: '显示',
	            field: 'isShow',
	            align: 'center',
	            valign: 'middle',
	            width: '50px',
	            formatter: function (item, index) {
	                return transIsNot(item.show)
	            }
	        },
			
			{label: '销售时间', name: 'saleTimes', index: 'sale_times', width: 80, sortable: false, align: 'center'},
			{label: '商品缩略图', name: 'picUrl', index: 'pic_url', width: 80, sortable: false, align: 'center'},
			{label: '商品大图', name: 'picBigUrl', index: 'pic_big_url', width: 80, sortable: false, align: 'center'},
			{label: '操作人', name: 'handlerId', index: 'handler_id', width: 80, sortable: false, align: 'center'},
			{label: '添加时间', name: 'addTime', index: 'add_time', width: 80, sortable: false, align: 'center'}]
    });
});

let vm = new Vue({
	el: '#rrapp',
	data: {
        showList: true,
        title: null,
		attributeCategoryExt: {},
		ruleValidate: {
			name: [
				{required: true, message: '名称不能为空', trigger: 'blur'}
			]
		},
		q: {
		    name: ''
		}
	},
	methods: {
		query: function () {
			vm.reload();
		},
		add: function () {
			vm.showList = false;
			vm.title = "新增";
			vm.attributeCategoryExt = {};
		},
		update: function (event) {
            let id = getSelectedRow("#jqGrid");
			if (id == null) {
				return;
			}
			vm.showList = false;
            vm.title = "修改";

            vm.getInfo(id)
		},
		
		//批量修改启用关闭
		change_status: function(tp){

            let ids = getSelectedRows("#jqGrid");
			if (ids == null){
				return;
			}
			var msg = tp == 1 ? "启用" : "禁用";
			
			confirm('确定要' + msg + '选中的记录？', function () {
                Ajax.request({
				    url: "../attributecategoryext/changestatus",
                    params: JSON.stringify(ids),
                    type: "POST",
				    contentType: "application/json",
                    successCallback: function () {
                        alert('操作成功', function (index) {
                            vm.reload();
                        });
					}
				});
			});
			
            
		},
		saveOrUpdate: function (event) {
            let url = vm.attributeCategoryExt.id == null ? "../attributecategoryext/save" : "../attributecategoryext/update";
            Ajax.request({
			    url: url,
                params: JSON.stringify(vm.attributeCategoryExt),
                type: "POST",
			    contentType: "application/json",
                successCallback: function (r) {
                    alert('操作成功', function (index) {
                        vm.reload();
                    });
                }
			});
		},
		del: function (event) {
            let ids = getSelectedRows("#jqGrid");
			if (ids == null){
				return;
			}

			confirm('确定要删除选中的记录？', function () {
                Ajax.request({
				    url: "../attributecategoryext/delete",
                    params: JSON.stringify(ids),
                    type: "POST",
				    contentType: "application/json",
                    successCallback: function () {
                        alert('操作成功', function (index) {
                            vm.reload();
                        });
					}
				});
			});
		},
		getInfo: function(id){
            Ajax.request({
                url: "../attributecategoryext/info/"+id,
                async: true,
                successCallback: function (r) {
                    vm.attributeCategoryExt = r.attributeCategoryExt;
                }
            });
		},
		reload: function (event) {
			vm.showList = true;
            let page = $("#jqGrid").jqGrid('getGridParam', 'page');
			$("#jqGrid").jqGrid('setGridParam', {
                postData: {'name': vm.q.name},
                page: page
            }).trigger("reloadGrid");
            vm.handleReset('formValidate');
		},
        reloadSearch: function() {
            vm.q = {
                name: ''
            }
            vm.reload();
        },
        handleSubmit: function (name) {
            handleSubmitValidate(this, name, function () {
                vm.saveOrUpdate()
            });
        },
        handleReset: function (name) {
            handleResetForm(this, name);
        }
	}
});