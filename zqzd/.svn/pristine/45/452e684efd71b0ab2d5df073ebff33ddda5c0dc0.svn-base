package com.platform.api;

import java.util.Map;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.platform.annotation.LoginUser;
import com.platform.entity.UserVo;
import com.platform.service.ApiUserService;
import com.platform.util.ApiBaseAction;
import com.platform.utils.Rp;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@Api(tags = "手机验证接口")
@RestController
@RequestMapping("/cpapi")
public class ApiMobileController extends ApiBaseAction{
	@Autowired
	private ApiUserService service;
	
	@ApiOperation(value = "获取手机号接口", response = Map.class)
	@PostMapping("/mobile/get")
	public Object moneyDetail(@LoginUser UserVo loginUser) {
		Rp cMap= service.getMobile(loginUser);
		return cMap;
	}
	
	@ApiOperation(value = "发送短息验证码接口", response = Map.class)
	@PostMapping("/mobile/send")
	public Object mobileSend(@LoginUser UserVo loginUser, @RequestParam(value = "mobile") String mobile) {
		Rp cMap= service.mobileSend(loginUser, mobile);
		return cMap;
	}
	
	@ApiOperation(value = "验证短息验证码接口", response = Map.class)
	@PostMapping("/mobile/validate")
	public Object mobileValidate(@LoginUser UserVo loginUser,@RequestParam(value = "code") String validate) {
		Rp cMap= service.mobileValidate(loginUser,validate);
		return cMap;
	}
	
	@ApiOperation(value = "修改绑定手机号接口", response = Map.class)
	@PostMapping("/mobile/change")
	public Object mobileChange(@LoginUser UserVo loginUser,@RequestParam(value = "old") String oldMobile,
							   @RequestParam(value = "new") String newMobile,@RequestParam(value = "code") String validate) {
		return service.mobileChange(loginUser, oldMobile, newMobile, validate);
	}
	
	@ApiOperation(value = "发送手机号码接口", response = Map.class)
	@PostMapping("/mobile/validatep")
	public Object mobileValidatep(@LoginUser UserVo loginUser) {
		return service.mobileValidatep(loginUser);
	}
	
	@ApiOperation(value = "发送新手机验证码接口", response = Map.class)
	@PostMapping("/mobile/sendchange")
	public Object mobileSendchange(@LoginUser UserVo loginUser,
				@RequestParam(value = "old") String oldMobile,
			   @RequestParam(value = "new") String newMobile) {
		return service.mobileSendchange(loginUser, oldMobile, newMobile);
	}
	
	
}
