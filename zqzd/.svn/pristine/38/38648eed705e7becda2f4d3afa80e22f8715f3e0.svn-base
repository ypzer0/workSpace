import * as types from './mutation-types'
import {api} from '@/service/api'
import {toast} from '@/libs/cube-ui'

export const actions = {
  async getIdentifyingCode ({commit, state}, o) {
    if (state.identifyingCode.time !== 60) {
      toast('请稍后重试', 'correct')
    } else {
      let res = await api.common.getIdentifyingCode()
      if (res.success) {
        toast('发送验证码成功', 'correct')
        const timer = setInterval(() => {
          if (state.identifyingCode.time === 0) {
            commit(types.CLEAR_IDENTIFY_TIMER)
          } else {
            commit(types.UPDATE_IDENTIFY_TIMER, state.identifyingCode.time - 1)
          }
        }, 1000)
        commit(types.INIT_IDENTIFY_TIMER, timer)
      } else {
        toast(res.msg, 'warn')
      }
    }
  },

  //zy 20180-12-29 获取商品详情
  async getGoodsInfo ({commit}, o) {
    var params = {
      id: o.id,
      referrer: o.referrer
    };
    let res = await api.goods.getGoodsInfo(params)
    if (res.success) {
      commit(types.LOAD_GOODS_DETAIL, res.data)
      // debugger;
      commit(types.COMPILE_GOODS, res.data)
    }

  },
  //zy 2019-1-3 添加car数据
  async BuyAdd ({commit}, o) {
    var params = {
      goodsId: o.goodsId,
      productId: o.productId,
      number:o.number
    };
    let res = await api.goods.BuyAdd(params)
    return res;
  },

  //
  async CompileGoods ({state}){



  },
  async GoodsCount ({commit}, o) {
    let res = await api.goods.GoodsCount()
    return res;
  },
  




}
