package com.platform.api;

import com.alibaba.fastjson.JSONObject;
import com.platform.annotation.IgnoreAuth;
import com.platform.entity.UserVo;
import com.platform.service.ApiUserService;
import com.platform.util.ApiBaseAction;
import com.platform.utils.R;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * API测试接口
 *
 */
@Api(tags = "优惠劵测试接口")
@RestController
@RequestMapping("/cpapi/test111")
public class ApiCPTestController extends ApiBaseAction {

    @Autowired
    private ApiUserService userService;

    /**
     * 获取用户信息
     */
    @ApiOperation(value = "测试接口", response = Map.class)
    @GetMapping("userInfo")
    @IgnoreAuth
    public Object userInfo() {
    	UserVo user = userService.queryObject(1L);
        return toRespons(R.ok().put("user", "2134234").put("udto", user));
    }
    

    /**
     * 获取用户信息
     */
    @ApiOperation(value = "测试接口", response = Map.class)
    @GetMapping("userInfo1")
    @IgnoreAuth
    public Object userInfo1() {
//    	UserVo user = userService.queryObject(1L);
    	
    	List<Map<String, Object>> dataList = new ArrayList<Map<String,Object>>();
    	
    	for (int i = 0; i < 10; i++) {
    		Map<String, Object> dtptMap = new HashMap<String, Object>();
    		dtptMap.put("cid", i);
    		dtptMap.put("name", "kkkkdd");
    		dataList.add(dtptMap);
		}
    	
    	Map<String, Object> rtMap = new HashMap<String, Object>();
    	rtMap.put("goodsClassNav", dataList);
        return toResponsSuccess(rtMap);
    }

    @ApiOperation(value = "测试接口", response = Map.class)
    @GetMapping("loginTest")
    public R loginTest() {
    	UserVo user = userService.queryObject(1L);
        return R.ok().put("user", "2134234").put("udto", user);
    }
}
