package com.platform.service;

import com.platform.dto.CouponGoodsInfoDto;
import com.platform.entity.CouponOrderEntity;

import java.util.List;
import java.util.Map;

/**
 * Service接口
 *
 * @author zy
 * @email zgyxszyd@163.com
 * @date 2019-04-22 11:10:01
 */
public interface CouponOrderService {

	/**
	 * 根据主键查询实体
	 *
	 * @param id 主键
	 * @return 实体
	 */
	CouponOrderEntity queryObject(Integer id);

	/**
	 * 分页查询
	 *
	 * @param map 参数
	 * @return list
	 */
	List<CouponOrderEntity> queryList(Map<String, Object> map);

	/**
	 * 分页统计总数
	 *
	 * @param map 参数
	 * @return 总数
	 */
	int queryTotal(Map<String, Object> map);

	/**
	 * 保存实体
	 *
	 * @param Couponorder 实体
	 * @return 保存条数
	 */
	int save(CouponOrderEntity Couponorder);

	/**
	 * 根据主键更新实体
	 *
	 * @param Couponorder 实体
	 * @return 更新条数
	 */
	int update(CouponOrderEntity Couponorder);

	/**
	 * 根据主键删除
	 *
	 * @param id
	 * @return 删除条数
	 */
	int delete(Integer id);

	/**
	 * 根据主键批量删除
	 *
	 * @param ids
	 * @return 删除条数
	 */
	int deleteBatch(Integer[] ids);

	//商品明细
	/**
	 * 分页查询
	 *
	 * @param map 参数
	 * @return list
	 */
	List<CouponOrderEntity> queryListInfo(Map<String, Object> map);

	/**
	 * 分页统计总数
	 *
	 * @param map 参数
	 * @return 总数
	 */
	int queryTotalInfo(Map<String, Object> map);

	//价格统计
	Map<String, Object> rptQueryPriceCountSum(Map<String, Object> map);

	//订单价格统计
	Map<String, Object> QueryOrderPriceCountSum(Map<String, Object> map);

	//商品明细导出
	List<CouponGoodsInfoDto> QuertGoodsCount(Map<String, Object> map);
	

    /**
     * 超过24h没有支付的订单进行关闭
     * */
    int orderClose24h();

    /**
     * 超过7天没有已收货、退款、退货的订单进行关闭
     * */
    int orderClose7d();
    
    /**
     * 已完成订单1小时后完成
     * */
    int orderFinish1h();
}
