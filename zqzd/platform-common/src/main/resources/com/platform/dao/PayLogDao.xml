<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.PayLogDao">

    <resultMap type="com.platform.entity.PayLogEntity" id="payLogMap">
        <result property="id" column="id"/>
        <result property="ip" column="ip"/>
        <result property="uId" column="u_id"/>
        <result property="uName" column="u_name"/>
        <result property="oId" column="o_id"/>
        <result property="orderNo" column="order_no"/>
        <result property="money" column="money"/>
        <result property="traType" column="tra_type"/>
        <result property="payType" column="pay_type"/>
        <result property="status" column="status"/>
        <result property="ctime" column="ctime"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.PayLogEntity">
		select
			`id`,
			`ip`,
			`u_id`,
			`u_name`,
			`o_id`,
			`order_no`,
			`money`,
			`tra_type`,
			`pay_type`,
			`status`,
			`ctime`
		from nideshop_pay_log
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.PayLogEntity">
		select
    		`id`,
    		`ip`,
    		`u_id`,
    		`u_name`,
    		`o_id`,
    		`order_no`,
    		`money`,
    		`tra_type`,
    		`pay_type`,
			`status`,
    		`ctime`
		from nideshop_pay_log
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from nideshop_pay_log
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.PayLogEntity" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_pay_log(
			`ip`,
			`u_id`,
			`u_name`,
			`o_id`,
			`order_no`,
			`money`,
			`tra_type`,
			`pay_type`,
			`status`,
			`ctime`)
		values(
			#{ip},
			#{uId},
			#{uName},
			#{oId},
			#{orderNo},
			#{money},
			#{traType},
			#{payType},
			#{status},
			#{ctime})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.PayLogEntity">
		update nideshop_pay_log 
		<set>
			<if test="ip != null">`ip` = #{ip}, </if>
			<if test="uId != null">`u_id` = #{uId}, </if>
			<if test="uName != null">`u_name` = #{uName}, </if>
			<if test="oId != null">`o_id` = #{oId}, </if>
			<if test="orderNo != null">`order_no` = #{orderNo}, </if>
			<if test="money != null">`money` = #{money}, </if>
			<if test="traType != null">`tra_type` = #{traType}, </if>
			<if test="payType != null">`pay_type` = #{payType}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="ctime != null">`ctime` = #{ctime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from nideshop_pay_log where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from nideshop_pay_log where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>